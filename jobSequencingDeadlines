'''
You are a multi-talented free-lancer and can work multiple jobs like Uber, Lyft, Coding, Carpentry
When you woke up one morning, your email contained several jobs you had to choose from.
Pick a list of jobs and a sequence to do them that day such that you make maximum money
Assumptions:
1) The list of jobs is provided.
2) Profit associated with each job is provided
3) Deadline for each job is provided
4) Jobs cannot be done parallely (ie: no overlap)
5) A job has to be completed before picking another job.
6) Each job takes up 1 unit of time
Algorithm:
1) Sort the lists based on decreasing order of profitability
2) Take the first job from profitability list and add to final job list along with profitability and deadline 
'''

jobList = ['Uber-Hotel', 'Lyft-Airport', 'Carpentry-Table', 'Uber-Hospital', 'Carpentry-Door', 'Lyft-Disney', 'Uber-School']
profitList = [200,390,100,800,590,400,620]
deadlineList = [2,3,2,4,5,6,1]

#Zip 3 lists into one list of tuples to sort
zipped = list(zip(jobList,profitList,deadlineList))
#Now sort descending order of profit
zipped.sort(reverse = True ,key = lambda x: x[1])
#Break zipped list into 3 individual lists
jobList,profitList,deadlineList = zip(*zipped)


newDead = dict{}
newDead.
newDead.append(deadlineList[0]) = jobList[0]
